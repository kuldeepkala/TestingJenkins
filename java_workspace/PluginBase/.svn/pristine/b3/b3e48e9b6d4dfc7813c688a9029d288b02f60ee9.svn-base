package com.crestech.opkey.plugin.logging;

import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.ConsoleHandler;
import java.util.logging.FileHandler;
import java.util.logging.Filter;
import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.XMLFormatter;

public final class LogConfiguration {

	private static List<Logger> ignoredLoggers = new ArrayList<>();

	private LogConfiguration() {
		/* just to prevent instantiation */
	}

	public static void configure() throws Exception {
		if (System.getProperty("java.util.logging.config.class") != null)
			return;

		if (System.getProperty("java.util.logging.config.file") != null)
			return;
		
		Level ALL = Level.ALL;
		Logger rootLogger = Logger.getLogger("");

		rootLogger.setLevel(ALL);

		//restrict logging to only from the classes in the (sub)packages of the startup Main class.
		
		StackTraceElement caller = new Throwable().getStackTrace()[1];
		String callerFullName = caller.getClassName();
		int lastPeriodAt = callerFullName.lastIndexOf(".");
		String callerPackageName = "";
		if(lastPeriodAt > 0)
			callerPackageName = callerFullName.substring(0, lastPeriodAt);
		
		final String callerPackageName_1 = callerPackageName;

		FileHandler fh = new FileHandler("bulk-log.xml");
		fh.setFormatter(new XMLFormatter());
		rootLogger.addHandler(fh);

		for (Handler handler : rootLogger.getHandlers()) {
			handler.setLevel(ALL);

			try {
				handler.setEncoding("UTF-8");
			} catch (Exception e) {
			}

			if (handler instanceof ConsoleHandler) {
				System.setOut(new PrintStream(System.out, true, "utf-8"));
				System.setErr(new PrintStream(System.err, true, "utf-8"));
				
				handler.setFormatter(new SingleLineFormatter());

				/*
				 * console accepts only logs generated by the plugin, or plugin
				 * base. all others go to the combined file
				 */

				handler.setFilter(new Filter() {
					public boolean isLoggable(LogRecord record) {
						String source = record.getSourceClassName();
						if (source == null)
							source = record.getLoggerName();

						return source.startsWith(callerPackageName_1) || source.startsWith("com.crestech");
					}
				});
			}
		}

		// the following loggers are suppressed

		Logger javax_xml_bind = Logger.getLogger("javax.xml.bind");
		javax_xml_bind.setLevel(Level.WARNING);
		ignoredLoggers.add(javax_xml_bind);

		Logger com_sun_xml = Logger.getLogger("com.sun.xml");
		com_sun_xml.setLevel(Level.WARNING);
		ignoredLoggers.add(com_sun_xml);
	}
}