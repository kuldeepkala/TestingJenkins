package readkeybasic;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class readkeyAdvance {
	/**
	 * Kuldeep Own this class ... haha this was for just docs
	 * 
	 * @param args
	 */

	// List<String> list_of_line = new ArrayList<>();// yeyeye we need it
	

	public List<String> readFileAndMakeItList(String file) {  /*Method for reading a file*/
		List<String> list_of_line = new ArrayList<>();
		try (BufferedReader br = Files.newBufferedReader(Paths.get(file),
				Charset.forName("Cp1252"))) { // <---- secure this program from
												// error of malcous functiion
												// type
			list_of_line = br.lines().collect(Collectors.toList());
		} catch (IOException e) {
			e.printStackTrace();
		}

		printCollectionsMakeEasy(list_of_line);
		return list_of_line;
	}

	private static void printCollectionsMakeEasy(List<String> listtype) { /* print collections */
		listtype.forEach(System.out::println);

	}

	public void findStringofFirstSqBreaket(List<String> fileline) { /*find string and add it into a list method*/ 
		List<String> list_of_String = new ArrayList<>();
		for (String v : fileline)

		{
			try {
				list_of_String.add(v.substring(v.indexOf('[') + 1,
						v.indexOf(']')));
			} catch (Exception e) { // nhi karna print .. major bhasad hai yaha
									// ...
			}
		}

		printCollectionsMakeEasy(list_of_String);

		
	}

	public void printWithoutduplicateStringInArray() {
		// Although converting the ArrayList to a HashSet effectively removes
		// duplicates,
		// if you need to preserve insertion order, I'd rather suggest you to
		// use this variant

		Set<String> without_duplicate_string = new LinkedHashSet<>(
				list_of_String);
		without_duplicate_string.forEach(System.out::println);
	}

	public static void main(String args[]) {
		String fileName = "D://testcase.txt"; // here some global.... not to be
												// part of chaos
		readkeyAdvance mc = new readkeyAdvance();
		mc.readFileAndMakeItList();
		mc.findStringofFirstSqBreaket();
		mc.printWithoutduplicateStringInArray();

	}

}// end of classes

